{
	// Place your 42-cpp workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Create main": {
		"scope": "cpp",
		"prefix": "main",
		"body": [
			"",
			"int main(int ac, char *av[]) {",
			"\t$1",
			"",
			"\treturn 0;",
			"}"
		],
		"description": "Create main function"
	},
	"replace to std::string": {
		"prefix": "str",
		"body": ["std::string"],
		"description": "replace to std::string"
	},
	"replace to std::cout": {
		"prefix": "cout",
		"body": ["std::cout"],
		"description": "replace to std::cout"
	},
	"replace to std::endl": {
		"prefix": "endl",
		"body": ["std::endl"],
		"description": "replace to std::endl"
	},
	"replace to std::cin": {
		"prefix": "cin",
		"body": ["std::cin"],
		"description": "replace to std::cin"
	},
}
